@model ChildCareSystem.ViewModels.BlogViewModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Create</h1>
@if (!String.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.ErrorMessage
    </div>
    <script>
        let status = 'failed'
    </script>
}
<h4>Blog</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" id="blogForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.Category"></select>
            </div>
            <div class="form-group">
                <label asp-for="Content" class="control-label"></label>
                <textarea asp-for="Content" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>
            <div class="form-row col-12">
                <div class="form-group col-12">
                    <label asp-for="ImageLink" class="control-label"></label>
                    <input asp-for="ImageLink" id="uploadedImg" hidden/>
                    <input asp-for="ImageName" id="imageName" hidden/>
                    <input type="file" id="image" class="form-control" />
                    <span asp-validation-for="ImageLink" class="text-danger"></span>
                    <span class="text-danger" hidden id="uploadImageError">Please choose an image for this blog.</span>
                </div>
            </div>
            <div class="form-group">
                <button class="btn btn-primary col-md-3" type="button" onclick="upLoadImage()">Create</button>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <!-- The core Firebase JS SDK is always required and must be listed first -->
    <script src="https://www.gstatic.com/firebasejs/8.6.8/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.6.8/firebase-storage.js"></script>
    <script>
        const firebaseConfig = {
            apiKey: "AIzaSyAMp7UVQSjA7-RSRwkmkQrCt3U9d-2aLHo",
            authDomain: "child-care-system-fa552.firebaseapp.com",
            databaseURL: "https://child-care-system-fa552-default-rtdb.firebaseio.com",
            projectId: "child-care-system-fa552",
            storageBucket: "child-care-system-fa552.appspot.com",
            messagingSenderId: "405468541919",
            appId: "1:405468541919:web:7a5f896edfa5d16d318a6a",
            measurementId: "G-GNZMSFGYBX"
        };

        // Initialize Firebase
        firebase.initializeApp(firebaseConfig);
    </script>
    <script>
        function upLoadImage() {
            const ref = firebase.storage().ref("images/blogs");
            const file = document.querySelector("#image").files[0];
            if (file != null) {
                const metadata = {
                    contentType: file.type
                };
                const name = file.name;
                $("#imageName").val(name);
                const uploadIMG = ref.child(name).put(file, metadata);
                uploadIMG
                    .then(snapshot => snapshot.ref.getDownloadURL())
                    .then(url => {                       
                        $("#uploadedImg").val(url);
                        $("#blogForm").submit();
                    })
                    .catch(console.error)
            } else {
                $("#uploadImageError").attr("hidden", false);
            }
        }
    </script>
    <script>
        if (status === 'failed') {
            var imageName = document.getElementById("imageName").value;
            var fileLocation = "images/blogs/" + imageName;
            firebase.storage().ref().child(fileLocation).delete();
        }
    </script>
    

}
